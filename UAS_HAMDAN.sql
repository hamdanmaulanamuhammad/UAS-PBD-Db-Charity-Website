-- Create the USERS table
CREATE TABLE USERS (
    USER_ID INT PRIMARY KEY,
    USER_NAME VARCHAR2(100) NOT NULL,
    USER_CONTACTS VARCHAR2(100),
    NIK VARCHAR2(50),
    ADDRESS VARCHAR2(255)
);

-- Create the ADMIN table
CREATE TABLE ADMIN (
    ADMIN_ID INT PRIMARY KEY,
    ADMIN_NAME VARCHAR2(100) NOT NULL,
    ADMIN_CONTACTS VARCHAR2(100),
    ADMIN_ADDRESS VARCHAR2(255)
);

-- Create the CATEGORIES table
CREATE TABLE CATEGORIES (
    CATEGORY_ID INT PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(100) NOT NULL,
    CATEGORY_DESCRIPTION VARCHAR2(250)
);

-- Create the FUNDRAISING table
CREATE TABLE FUNDRAISING (
    RAISING_ID INT PRIMARY KEY,
    DONATION_TITLE VARCHAR2(100) NOT NULL,
    FUNDRAISER_ID INT,
    TARGET DECIMAL(10, 2),
    VERIFIER_ID INT,
    DATE_START DATE,
    CATEGORY_ID INT,
    FOREIGN KEY (FUNDRAISER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (VERIFIER_ID) REFERENCES ADMIN(ADMIN_ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID)
);

-- Create the DONATIONS table
CREATE TABLE DONATIONS (
    DONATION_ID INT PRIMARY KEY,
    RAISING_ID INT,
    AMOUNT DECIMAL(10, 2),
    DONATION_DATE DATE,
    DONATOR_NAME VARCHAR2(100),
    CONTACTS VARCHAR2(100),
    PAYMENT_METHOD VARCHAR2(50),
    MESSAGES VARCHAR2(500),
    FOREIGN KEY (RAISING_ID) REFERENCES FUNDRAISING(RAISING_ID)
);

-- Create the COMMENTS table
CREATE TABLE COMMENTS (
    COMMENT_ID INT PRIMARY KEY,
    RAISING_ID INT,
    USER_ID INT,
    COMMENT_TEXT VARCHAR2(500),
    COMMENT_DATE DATE,
    FOREIGN KEY (RAISING_ID) REFERENCES FUNDRAISING(RAISING_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);
